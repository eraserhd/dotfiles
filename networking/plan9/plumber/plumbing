# to update: cat $HOME/lib/plumbing | 9p write plumb/rules
# these are generally in order from most specific to least,
# since first rule that fires wins.

addrelem='((#?[0-9]+)|(/[A-Za-z0-9_\^]+/?)|[.$])'
addr=:($addrelem([,;+\-]$addrelem)*)
twocolonaddr = ([0-9]+)[:.]([0-9]+)

# declarations of ports without rules
plumb to seemail
plumb to showmail

# relative files as file: urls get made into absolute paths
type is text
data matches 'file:([.a-zA-Z¡-￿0-9_\-]([.a-zA-Z¡-￿0-9_/\-]*[a-zA-Z¡-￿0-9_/\-]))?'
arg isfile	$1
data set	file://$file
plumb to web
plumb start web $data

# JIRA tickets turned into web links
type is text
data matches '([a-z][a-z]-)*[a-zA-Z][a-zA-Z0-9]+(-[0-9]+)+'
plumb start sh -c 'plumb "`@jira_link@/bin/jira-link -1 '''$0'''`"'

# urls go to web browser
type is text
data matches '(https?|ftp|file|gopher|mailto|news|nntp|telnet|wais|prospero)://[a-zA-Z0-9_@\-]+([.:][a-zA-Z0-9_@\-]+)*/?[a-zA-Z0-9_?,$%#~&/\-+=]+([:.][a-zA-Z0-9_?,$%#~&/\-+=]+)*'
plumb to web
plumb start open-in-chrome-tab $0

# files tagged by line number:columnumber or linenumber.columnumber, twice, go to editor
#arg isfile     $1
type is text
data matches '([.a-zA-Z¡-￿0-9_/\-@]*[a-zA-Z¡-￿0-9_/\-])':$twocolonaddr,$twocolonaddr
data set     $1
data set     $file
attr add     session=kakoune
attr add     'evaluate=''edit -existing %§'$data'§ ; select '$2'.'$3','$4'.'$5''''
plumb to edit

# files tagged by line number:columnumber or linenumber.columnumber, go to editor
#arg isfile     $1
type is text
data matches '([.a-zA-Z¡-￿0-9_/\-@]*[a-zA-Z¡-￿0-9_/\-])':$twocolonaddr
data set     $1
data set     $file
attr add     session=kakoune
attr add     'evaluate=''edit -existing %§'$data'§ '$2' '$3''''
plumb to edit

# files tagged by (line number,column number) go to editor
type is text
data matches '([.a-zA-Z¡-￿0-9_/\-@]*[a-zA-Z¡-￿0-9_/\-])\(([0-9]+),([0-9]+)\)'
data set     $1
data set     $file
attr add     session=kakoune
attr add     'evaluate=''edit -existing %§'$data'§ '$2' '$3''''
plumb to edit

# existing files, tagged by line number, go to editor
#arg isfile	$1
type is text
data matches '([.a-zA-Z¡-￿0-9_/\-@]*[a-zA-Z¡-￿0-9_/\-])'$addr
data set     $1
data set     $file
attr add     session=kakoune
attr add     'evaluate=''edit -existing %§'$data'§ '$2' ; execute-keys gi'''
plumb to edit

# Open Mac OS apps
type is text
data matches '([.a-zA-Z¡-￿0-9_/\-@]*[a-zA-Z¡-￿0-9_/\-]\.app)'
plumb start rc -c 'open -a '''$data''''

# existing files go to editor
type is text
data matches '([.a-zA-Z¡-￿0-9_/\-@]*[a-zA-Z¡-￿0-9_/\-])'
data set     $1
data set     $file
attr add     session=kakoune
attr add     'evaluate=''edit -existing %§'$data'§'''
plumb to edit

# .h files are looked up in /usr/include and passed to edit
type is text
data matches '([a-zA-Z¡-￿0-9/_\-]+\.h)('$addr')?'
arg isfile	/usr/include/$1
data set	$file
attr add        session=kakoune
attr add	addr=$3
plumb to edit

# .h files are looked up in /usr/local/include and passed to edit
type is text
data matches '([a-zA-Z¡-￿0-9/_\-]+\.h)('$addr')?'
arg isfile	/usr/local/include/$1
data set	$file
attr add        session=kakoune
attr add	addr=$3
plumb to edit

# .h files are looked up in $plan9/include and passed to edit
type is text
data matches '([a-zA-Z¡-￿0-9/_\-]+\.h)('$addr')?'
arg isfile	$plan9/include/$1
data set	$file
attr add        session=kakoune
attr add	addr=$3
plumb to edit

# .m files are looked up in /usr/inferno/module and passed to edit
type is text
data matches '([a-zA-Z¡-￿0-9/_\-]+\.m)('$addr')?'
arg isfile	/usr/inferno/module/$1
data set	$file
attr add        session=kakoune
attr add	addr=$3
plumb to edit

# When action=showdata and we haven't matched anything above, display the data
# in a scratch buffer.
type is      text
type set     $attr
type matches '.*action=showdata.*'
type set     text
attr add     session=kakoune
attr add     'evaluate=''plumb-showdata ; try %{set-option buffer plumb_wdir %§'$wdir'§}'''
plumb to edit

# faces -> new mail window for message
type	is	text
data	matches	'[a-zA-Z¡-￿0-9_\-./]+'
data	matches	'/mail/fs/[a-zA-Z¡-￿0-9/]+/[0-9]+'
plumb	to	showmail
# plumb	start	window -r 4 120 750 600 upas/nedmail -s $0

# email addresses get a new mail window
type is text
data matches '[a-zA-Z0-9_+.\-]+@[a-zA-Z0-9_+.\-]*'
plumb to sendmail
# plumb start window rc -c '''echo % mail '''$0'; mail '$0

# man index entries are synthesized
type is text
data matches '([a-zA-Z¡-￿0-9_\-./]+)\(([1-8])\)'
plumb start rc -c 'man '$2' '$1' >[2=1] | nobs | plumb -i -d edit -a ''action=showdata filename=/man/'$1'('$2')'''

# start rule for images without known suffixes
dst is image
arg isfile $data
plumb to image
plumb start 9 page $data

# start rule for postscript without known suffixes
dst is postscript
arg isfile $data
plumb start 9 page $data

