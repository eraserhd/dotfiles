#!/usr/bin/env gxi

(import :std/text/json
        :std/misc/process
        :std/sugar)

(def laptop-display "143ABEAF-FB72-322D-E98C-F6A9BBDF00CA")

(def (get-laptop-display-number)
  (alet* ((displays (run-process ["yabai" "-m" "query" "--displays"]
                                 coprocess: read-json))
          (display  (find (lambda (display)
                            (string=? (hash-get display 'uuid) laptop-display))
                          displays)))
    (hash-get display 'index)))

(def (get-spaces)
  (run-process ["yabai" "-m" "query" "--spaces"]
               coprocess: read-json))

(def (configure-space index key value)
  (run-process ["yabai" "-m" "config" "--space" (number->string index) key value]))

(def (configure-laptop-space index)
  (configure-space index "layout" "float"))

(def (configure-code-space index)
  (configure-space index "layout" "bsp"))

(def (label-space index label)
  (run-process ["yabai" "-m" "space" (number->string index) "--label" label]))

(def (main)
  (def laptop-display-number (get-laptop-display-number))
  (def code-space #f)
  (def browse-space #f)
  (def meeting-space #f)
  (for-each (lambda (space)
              (let-hash space
                (if (= .display laptop-display-number)
                  (begin
                    (when (not browse-space)
                      (set! browse-space .index))
                    (configure-laptop-space .index))
                  (begin
                    (when (not code-space)
                      (set! code-space .index))
                    (configure-code-space .index)))))
            (get-spaces))
  (when code-space
    (label-space code-space "code"))
  (when browse-space
    (label-space browse-space "browse"))
  (when meeting-space
    (label-space meeting-space "meeting")))
