#!/usr/bin/env gxi
(import :std/text/json
        :std/misc/process
        :std/sugar)

(def laptop-display "143ABEAF-FB72-322D-E98C-F6A9BBDF00CA")

(def (yabai . args)
  (def (->arg x)
    (if (string? x)
      x
      (object->string x)))
  (run-process ["yabai" (map ->arg args) ...]))

(def (yabai-query . args)
  (run-process ["yabai" "-m" "query" args ...]
               coprocess: read-json))

(def (yabai-configure option value space: (space #f))
  (apply yabai "-m" "config" [(if space ["--space" space] []) ... option value]))

(def (yabai-add-rule label: (label #f)
                     app: (app #f)
                     space: (space #f)
                     manage: (manage no-change:))
  (apply yabai "-m" "rule" "--add" 
         [(if label
            [(string-append "label=" label)]
            []) ...
          (if app
            [(string-append "app=" app)]
            []) ...
          (if space
            [(string-append "space=" space)]
            []) ...
          (case manage
            ((no-change:) [])
            ((#t)         ["manage=on"])
            ((#f)         ["manage=off"])) ...]))

(def (yabai-add-signal event: event
                       action: action)
  (yabai "-m" "signal" "--add" (string-append "event=" event) (string-append "action=" action)))

(def (get-laptop-display-number)
  (alet* ((displays (yabai-query "--displays"))
          (display  (find (lambda (display)
                            (string=? (hash-get display 'uuid) laptop-display))
                          displays)))
    (hash-get display 'index)))

(def (configure-laptop-space index)
  (yabai-configure space: index "layout" "float"))

(def (configure-monitor-space index)
  (yabai-configure space: index "layout" "bsp")
  (yabai-configure space: index "bottom_padding" 55))

(def (label-space index label)
  (yabai "-m" "space" index "--label" label))

(def (update-spaces)
  (def laptop-display-number (get-laptop-display-number))
  (def code-space #f)
  (def browse-space #f)
  (def meeting-space #f)
  (for-each (lambda (space)
              (let-hash space
                (if (= .display laptop-display-number)
                  (begin
                    (when (not browse-space)
                      (set! browse-space .index))
                    (configure-laptop-space .index))
                  (begin
                    (when (not code-space)
                      (set! code-space .index))
                    (configure-monitor-space .index)))))
            (yabai-query "--spaces"))
  (when code-space
    (label-space code-space "code"))
  (when browse-space
    (label-space browse-space "browse"))
  (when meeting-space
    (label-space meeting-space "meeting")))

(def (reconfigure)
  ; global settings
  (yabai-configure "mouse_follows_focus"        "on")
  (yabai-configure "focus_follows_mouse"        "off")
  (yabai-configure "window_placement"           "second_child")
  (yabai-configure "window_topmost"             "off")
  (yabai-configure "window_opacity"             "off")
  (yabai-configure "window_opacity_duration"    "0.0")
  (yabai-configure "active_window_opacity"      "1.0")
  (yabai-configure "normal_window_opacity"      "0.90")
  (yabai-configure "split_ratio"                "0.50")
  (yabai-configure "auto_balance"               "off")
  (yabai-configure "mouse_modifier"             "fn")
  (yabai-configure "mouse_action1"              "move")
  (yabai-configure "mouse_action2"              "resize")

  (yabai-configure "window_shadow"              "off")
  (yabai-configure "window_border"              "on")
  (yabai-configure "active_window_border_color" "0xff8c6cff")

  (update-spaces)
  (yabai-add-signal event: "display_added" action: "yabai-config --signal display_added")
  (yabai-add-signal event: "display_removed" action: "yabai-config --signal display_removed")

  ; (1) Coding
  (yabai-add-rule label: "kitty" app: "kitty" space: "^code")

  ; (2) Laptop window
  (yabai-add-rule label: "Music" app: "Music" space: "browse")
  (yabai-add-rule label: "Spotify" app: "Spotify" space: "browse")
  (yabai-add-rule label: "Anki" app: "Anki" space: "browse")
  (yabai-add-rule label: "Books" app: "Books" space: "browse")
  (yabai-add-rule label: "Messages" app: "Messages" space: "browse")
  (yabai-add-rule label: "Discord" app: "Discord" space: "browse")

  ; general space settings
  (yabai-configure "layout"         "bsp")
  (yabai-configure "top_padding"    "28")
  (yabai-configure "bottom_padding" "2")
  (yabai-configure "left_padding"   "2")
  (yabai-configure "right_padding"  "2")
  (yabai-configure "window_gap"     "2")

  ; Things not to manage
  (yabai-add-rule label: "preferences" app: "System Preferences" manage: #f))

(def (handle-signal signal-name)
  (match signal-name
   ("display_added"   (update-spaces))
   ("display_removed" (update-spaces))
   (_                 #f)))

(def (main . args)
  (match args
   (["--init"]               (reconfigure))
   (["--signal" signal-name] (handle-signal signal-name))))
